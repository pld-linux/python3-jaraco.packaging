This reverts to the state before https://github.com/jaraco/jaraco.packaging/commit/278f825bf6c9beba82aaa77d765dd8c86e342ca7
which was plain stupid from distro packaging perspective as it was trying to fetch packages from pip
at documentation build time.

Current (9.4.0) code has some workaround, but it requires building wheel, which we don't do either.

--- jaraco.packaging-9.4.0/jaraco/packaging/sphinx.py.orig	2023-10-17 20:57:31.545755310 +0200
+++ jaraco.packaging-9.4.0/jaraco/packaging/sphinx.py	2023-10-18 19:33:19.935053257 +0200
@@ -7,11 +7,9 @@ True
 """
 
 import os
-import warnings
+import sys
 from importlib import metadata
 
-from build.util import project_wheel_metadata as load_metadata
-from jaraco.context import suppress
 import sphinx.util.docutils
 from docutils.parsers.rst import directives
 import docutils.statemachine
@@ -82,39 +80,25 @@ class SidebarLinksDirective(sphinx.util.
         return [only_node]
 
 
-@suppress(KeyError)
-def _load_metadata_from_wheel():
-    """
-    If indicated by an environment variable, expect the metadata
-    to be present in a wheel and load it from there, avoiding
-    the build process. Ref jaraco/jaraco.packaging#7.
-
-    >>> _load_metadata_from_wheel()
-    >>> getfixture('static_wheel')
-    >>> meta = _load_metadata_from_wheel()
-    >>> meta['Name']
-    'sampleproject'
-    """
-    wheel = os.environ['JARACO_PACKAGING_SPHINX_WHEEL']
-    warnings.warn(
-        "JARACO_PACKAGING_SPHINX_WHEEL is deprecated; fix pypa/build#556 instead",
-        DeprecationWarning,
-    )
-    (dist,) = metadata.distributions(path=[wheel])
-    return dist.metadata
-
-
 def load_config_from_setup(app):
     """
     Replace values in app.config from package metadata
     """
     # for now, assume project root is one level up
     root = os.path.join(app.confdir, '..')
-    meta = _load_metadata_from_wheel() or load_metadata(root)
-    app.config.project = meta['Name']
-    app.config.version = app.config.release = meta['Version']
-    app.config.package_url = meta['Home-page']
-    app.config.author = app.config.copyright = meta['Author']
+    setup_script = os.path.join(root, 'setup.py')
+    fields = ['--name', '--version', '--url', '--author']
+    dist_info_cmd = [sys.executable, setup_script] + fields
+    output = subprocess.check_output(dist_info_cmd, cwd=root, universal_newlines=True)
+    outputs = output.strip().split('\n')
+    try:
+        project, version, url, author = outputs
+    except ValueError:
+        raise ValueError("Unexpected metadata output", output)
+    app.config.project = project
+    app.config.version = app.config.release = version
+    app.config.package_url = url
+    app.config.author = app.config.copyright = author
 
 
 def configure_substitutions(app):
--- jaraco.packaging-9.4.0/setup.cfg.orig	2023-10-17 20:57:31.549088625 +0200
+++ jaraco.packaging-9.4.0/setup.cfg	2023-10-18 19:36:51.620573125 +0200
@@ -18,8 +18,6 @@ packages = find_namespace:
 include_package_data = true
 python_requires = >=3.8
 install_requires = 
-	build[virtualenv]
-	jaraco.context
 	sphinx
 	domdf-python-tools
 
